// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// List of valid entries
enum OrderStatus {
  fulfilled
  shipped
  awaiting_shipment
}

enum PhoneCaseModel {
  iphonex
  iphone11
  iphone12
  iphone13
  iphone14
  iphone15
}

enum PhoneCaseMaterial {
  silicone
  polycarbonate
}

enum PhoneCaseFinish {
  smooth
  textured
}

enum PhoneCaseColor {
  black
  blue
  rose
  violet
  yellow
  teal
}

model Configuration {
  // id String @id @default(uuid()) // uuid is mush longer
  id              String             @id @default(cuid())
  width           Int
  height          Int
  imageUrl        String
  color           PhoneCaseColor?
  model           PhoneCaseModel?
  material        PhoneCaseMaterial?
  finish          PhoneCaseFinish?
  croppedImageUrl String?
  Order           Order[]
}

model User {
  id    String @id @default(cuid())
  // email String
  email String @unique

  Order Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id              String        @id @default(cuid())
  configurationId String
  configuration   Configuration @relation(fields: [configurationId], references: [id])
  user            User          @relation(fields: [userId], references: [id])
  userId          String
  amount          Float
  isPaid          Boolean       @default(false)
  status          OrderStatus   @default(awaiting_shipment)

  shippingAddress   Address? @relation(fields: [shippingAddressId], references: [id])
  shippingAddressId String?
  billingAddress    Address? @relation(fields: [billingAddressId], references: [id])
  billingAddressId  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ShippingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}

model BillingAddress {
  id          String  @id @default(cuid())
  name        String
  street      String
  city        String
  postalCode  String
  country     String
  state       String?
  phoneNumber String?
  orders      Order[]
}
